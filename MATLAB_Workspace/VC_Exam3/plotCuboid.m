function plotCuboid(vertices, varargin)

% PLOTCUBOID Display a cuboid element
%    PLOTCUBOID(C) display the cuboid C, generated by the function
%    createCuboid (see help createCuboid for more information).
%
%    PLOTCUBOID(C, 'xScale', X, 'yScale', Y, 'zScale, Y) allows setting the
%    limits of all the axes. X, Y and Z must be vectors in the form
%    [minValue maxValue]
%
%    PLOTCUBOID(C, 'worldScale', W) is the same as above with X=Y=Z=W
%
%    PLOTCUBOID(C, 'vertexSize', size) allows setting the size use to draw
%    all vertices.
%
%    PLOTCUBOID(C, 'color', colormap) allows assigning the color of each
%    face of the cuboid. colormap must be a 6-column matrix.
%
%    Other m-files required: none
%    Subfunctions: none
%    MAT-files required: none
%
%    See also: CREATECUBOID, ROTATECUBOID

% Author: André Augusto Geraldes
% Email: andregeraldes@lara.unb.br
% December 2013; Last revision: 14-December-2013

% Default parameters
xScale = [-5 10];
yScale = [-5 10];
zScale = [-5 10];
cuboidColors = 0:5;
vertexSize = 50;

% Check varargin for updating the plot parameters
if(nargin > 1 && mod(nargin-1,2) == 0)
    for iArgin = 1:(nargin-1)/2
        if    (strcmp(varargin{2*iArgin-1}, 'xScale'))
            xScale = varargin{2*iArgin};
        elseif(strcmp(varargin{2*iArgin-1}, 'yScale'))
            yScale = varargin{2*iArgin};      
        elseif(strcmp(varargin{2*iArgin-1}, 'zScale'))
            zScale = varargin{2*iArgin};       
        elseif(strcmp(varargin{2*iArgin-1}, 'worldScale'))
            xScale = varargin{2*iArgin};       
            yScale = varargin{2*iArgin};       
            zScale = varargin{2*iArgin};      
        elseif(strcmp(varargin{2*iArgin-1}, 'vertexSize'))
            vertexSize = varargin{2*iArgin};
        elseif(strcmp(varargin{2*iArgin-1}, 'color'))
            if(size(vertices, 2) ~= 6)
                error('ErrorTests:convertTest', '\t colormap must be a 6-column matrix');
            end
            cuboidColors = varargin{2*iArgin};                
        end
    end
end

% Verify the size of the provided vertices matrix
if(~isequal(size(vertices), [3 8]))
    error('ErrorTests:convertTest', '\t plotCuboid function requires a 3x8 matrix as argument. The size of the received argument is %dx%d', size(vertices,1), size(vertices,2));
end

% Generate the faces map matrix used by the fill3 function
x = vertices(1,:);
y = vertices(2,:);
z = vertices(3,:);
cuboidFaces = [1 2 3 4; 2 6 7 3; 6 5 8 7; 5 1 4 8; 1 2 6 5; 4 3 7 8]';

% Open and configure a new figure
figure;
hold on;
xlim(xScale);
ylim(yScale);
zlim(zScale);
view(37.5, 30)
set(gca,'position',[0.05 0.05 0.9 0.9],'units','normalized')

% Draw the axes of the coordinate system
S = min(abs([xScale yScale zScale]));
quiver3(zeros(3,1), zeros(3,1), zeros(3,1), [S 0 0]', [0 S 0]', [0 0 S]');

% Draw the faces of the cuboid
fill3(x(cuboidFaces), y(cuboidFaces), z(cuboidFaces), cuboidColors);

% Draw the vertices of the cuboid
scatter3(x, y, z, vertexSize*ones(1,8), 'r', 'filled');
